{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","Date","days","Math","floor","time","hours","mins","secs"],"mappings":";AAAA,IAAIA,eAAe,CACjBC,SAAU,WACVC,WAAY,IAAIC,KAAK,kBAMvB,IAAMC,EAAOC,KAAKC,MAAMC,KAAQ,OAO1BC,EAAQH,KAAKC,MAAOC,KAAQ,MAAyB,MAMrDE,EAAOJ,KAAKC,MAAOC,KAAQ,KAAoB,KAM/CG,EAAOL,KAAKC,MAAOC,KAAQ,IAAc","file":"src.bac5eae5.js","sourceRoot":"..\\src","sourcesContent":["new CountdownTimer({\r\n  selector: \"#timer-1\",\r\n  targetDate: new Date(\"Jul 17, 2019\"),\r\n});\r\n/*\r\n * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\r\n * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\r\n */\r\nconst days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n\r\n/*\r\n * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\r\n * остатка % и делим его на количество миллисекунд в одном часе\r\n * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\r\n */\r\nconst hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\r\n/*\r\n * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\r\n * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\r\n */\r\nconst mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n/*\r\n * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\r\n * миллисекунд в одной секунде (1000)\r\n */\r\nconst secs = Math.floor((time % (1000 * 60)) / 1000);\r\n"]}